import os
from difflib import get_close_matches
from ui.menus import clear_screen
from rich import print
from rich.panel import Panel
from rich.text import Text
from rich.columns import Columns
from data.search_knowledge import SEARCH_KNOWLEDGE


def get_suggestions(user_input):
    """–ù–∞—Ö–æ–¥–∏—Ç 3 –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ—Ö–æ–∂–∏—Ö —Ç–µ—Ä–º–∏–Ω–∞"""
    all_terms = list(SEARCH_KNOWLEDGE.keys())
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã –≤ –ø–æ–∏—Å–∫
    for term_data in SEARCH_KNOWLEDGE.values():
        all_terms.extend(term_data.get("related", []))
    return get_close_matches(user_input, all_terms, n=3, cutoff=0.4)

def show_search_help():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"""
    clear_screen()
    categories = {
        "–û—Å–Ω–æ–≤–Ω—ã–µ": ["ip", "—Ä–æ—É—Ç–µ—Ä", "–ø–æ–¥—Å–µ—Ç—å", "—à–ª—é–∑"],
        "–ü—Ä–æ—Ç–æ–∫–æ–ª—ã": ["dns", "http", "https", "ftp"],
        "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã": ["ping", "—Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞", "nslookup"],
        "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å": ["–ø–∞—Ä–æ–ª—å", "–∞–Ω—Ç–∏–≤–∏—Ä—É—Å", "–±—Ä–∞–Ω–¥–º–∞—É—ç—Ä"]
    }
    
    print("\n[bold]–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã:[/bold]")
    print("[dim]–î–ª—è –≤—ã–±–æ—Ä–∞ –≤–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ[/dim]\n")
    
    panels = []
    for category, terms in categories.items():
        panel = Panel.fit(
            "\n".join(f"‚Ä¢ {term}" for term in terms),
            title=f"[cyan]{category}[/cyan]",
            border_style="blue",
            padding=(0, 2)
        )
        panels.append(panel)
    
    print(Columns(panels, equal=True, expand=True))

def show_search_result(term):
    """–í—ã–≤–æ–¥–∏—Ç –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    clear_screen()
    if term not in SEARCH_KNOWLEDGE:
        print(
            Panel("–¢–µ—Ä–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω", title="‚ö†Ô∏è –û—à–∏–±–∫–∞", border_style="red")
        )
        return
    
    data = SEARCH_KNOWLEDGE[term]
    content = Text.from_markup(
        f"[bold]{data['title']}[/bold]\n\n{data['content']}\n\n"
        f"[dim]–°–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã: {', '.join(data.get('related', [])) or '–Ω–µ—Ç'}[/dim]"
    )
    print(Panel(content, title="üìö –†–µ–∑—É–ª—å—Ç–∞—Ç", border_style="green", padding=(1, 3)))

def show_search():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞"""
    clear_screen()
    while True:
        print("\n" + "="*50)
        print("[bold]üîç –ü–æ–∏—Å–∫ –ø–æ —Å–µ—Ç–µ–≤—ã–º —Ç–µ—Ä–º–∏–Ω–∞–º[/bold]")
        print("[dim]–ö–æ–º–∞–Ω–¥—ã: '–ø–æ–º–æ—â—å' - —Å–ø–∏—Å–æ–∫, '–≤—ã—Ö–æ–¥' - –Ω–∞–∑–∞–¥[/dim]")
        
        query = input("\n–í–≤–µ–¥–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω: ").strip().lower()
        
        if query == "–≤—ã—Ö–æ–¥":
            clear_screen()
            break
            
        if query == "–ø–æ–º–æ—â—å":
            show_search_help()
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")
            clear_screen()
            continue
        
        if not query:
            continue
            
        # –ü–æ–∏—Å–∫ —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
        if query in SEARCH_KNOWLEDGE:
            show_search_result(query)
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")
            clear_screen()
            continue
            
        # –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
        suggestions = get_suggestions(query)
        if suggestions:
            clear_screen()
            print(f"\n[dim]–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –∏–º–µ–ª–∏ –≤ –≤–∏–¥—É:[/dim]")
            for i, term in enumerate(suggestions, 1):
                print(f"[bold]{i}.[/bold] {term}")
            
            choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3) –∏–ª–∏ Enter –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞: ")
            if choice.isdigit() and 1 <= int(choice) <= 3:
                show_search_result(suggestions[int(choice)-1])
                input("\n–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")
            clear_screen()
        else:
            clear_screen()
            print(
                Panel(
                    "–¢–µ—Ä–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n"
                    "- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—é\n"
                    "- –í–≤–µ—Å—Ç–∏ '–ø–æ–º–æ—â—å' –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ç–µ—Ä–º–∏–Ω–æ–≤",
                    title="‚ö†Ô∏è –û—à–∏–±–∫–∞",
                    border_style="red"
                )
            )
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")
            clear_screen()